var tipuesearch = {"pages":[{"title":"Correct pip error when installing or freezing with git repos","text":"I kept having the following issue when using pip freeze with a git repos: Complete output from command / usr / local / bin / git rev - parse origin / HEAD : fatal : ambiguous argument ' origin/HEAD ' : unknown revision or path not in the working tree . Use ' -- ' to separate paths from revisions , like this : ' git <command> [<revision>...] -- [<file>...] ' origin / HEAD ---------------------------------------- Error when trying to get requirement for VCS system Command / usr / local / bin / git rev - parse origin / HEAD failed with error code 128 in / home / mtiteux / . virtualenvs / myproject , falling back to uneditable format Could not determine repository location of / home / mtiteux / . virtualenvs / myproject This drove me quite perplexed as to the reason why I could not correctly parsed requirements.txt files and got a when using pip freeze : Could not determine repository location Then, I stumbled upon on this blog (link broken) post which explained everything. The solution proposed (edit .gitconfig [color]) solved the issue! As a reference, in case of the link goes down, I am copy & pasting the clue here: The cause is the .gitconfig's color setting: [color] ui = always Replace it by [color] ui = auto","tags":"languages","url":"https://machines-walking-in-the-snow.com/2022/04/22/correct-pip-error-installing-freezing-with-git-repos/","loc":"https://machines-walking-in-the-snow.com/2022/04/22/correct-pip-error-installing-freezing-with-git-repos/"},{"title":"Developing Django inside a Vagrant box","text":"It seems to me it is always a good idea to have a virtual machine for development. And it seems I am not the first and only to think about it, which tends to validate the approach… There are many approaches to this, and my preferred is using Vagrant . There are a lot of tutorials ( here , [here][vagrant2] or [here][vagrant3]), and I am not going to make yet another one. One of my current hackish occupation is to develop a Django website, using a Postgres/nginx/supervisor/Django1.7/Python3 stack (yeah, a classic now). Actually, I am stretching myself since I left Django at version 1.4 with Python 2. It takes me time, and I do not want to mess with my laptop. So a VM seems the perfect way. However, for some reason, I cannot get my prefered browser, with all its tools (Chrome) working properly under this VM ( VirtualBox ). Or IE11 as well for what it's worth. Thus I was looking for a virtualizing my environment and came up with this [vagrant box][my_vagrant] of a Debian Wheezy 7.6 image with the aforementioned stack. It suits me quite well for developing apps for Django. You can check out the README for customizing it to your needs. [vagrant3]: [my_vagrant]","tags":"computers","url":"https://machines-walking-in-the-snow.com/2022/04/22/django-vagrant-box/","loc":"https://machines-walking-in-the-snow.com/2022/04/22/django-vagrant-box/"},{"title":"How to repair mysql workbench on CentOS","text":"One of the issue on linux with mysql-workbench is linked to Python. First, check the requirement list is depicted on mysql-workbench page for the supported platforms. On CentOS, you could have installed it using yum and remi repos . If this is the case, reinstall it: yum —enablerepo=remi reinstall mysql-workbench If you installed it using the tar.gz package, check that you have the following Python package for the linux version: python-paramiko if you use pip: pip install paramiko if you use setuptools: easy_install pycrypto easy_install paramiko Let me know if it works for you.","tags":"computers","url":"https://machines-walking-in-the-snow.com/2022/04/22/how-to-repair-mysql-workbench-centos/","loc":"https://machines-walking-in-the-snow.com/2022/04/22/how-to-repair-mysql-workbench-centos/"},{"title":"Installing numpy through pip with openBLAS on Debian","text":"Strangely, I was struggling hard to install numpy 1.8.0 (with pip in a virtualenv) on Debian 7.1 with OpenBLAS . I always got the following error message: numpy . distutils . system_info . BlasNotFoundError : Blas ( http : // www . netlib . org / blas / ) libraries not found . Directories to search for the libraries can be specified in the numpy / distutils / site . cfg file ( section [ blas ] ) or by setting the BLAS environment variable . After googling (a lot), I stumbled on gromgull's blog which mentioned at one point to install the header versions of the openblas lib for debian, aka sudo apt-get install libopenblas-dev liblapack-dev Though I did not follow the rest of the article. I just tried to install numpy through pip at this stage and everything worked! Actually, that's because there was a Pull Request accepted in numpy to accept OpenBLAS transparently , since gromgull's blog entry. However, afterwards, I decided to remove all blas/atlas/etc lib from stock (all system libs), and compile openblas from source, to get a few performance improvement. To do this, I had to symlink libopenblas lib using update-alternatives (pip install numpy is looking for that specific path. If not there, one should add it or follow gromgull's approach): sudo update-alternatives --install /usr/lib/libblas.so.3 libblas.so.3 /usr/local/lib/libopenblas.so 90 And everything went great!","tags":"computers","url":"https://machines-walking-in-the-snow.com/2022/04/22/installing-numpy-pip-openblas/","loc":"https://machines-walking-in-the-snow.com/2022/04/22/installing-numpy-pip-openblas/"},{"title":"Migration finished","text":"I have finished setting up the website, pruning and migrating content to pelican and tweaking with publishing workflow. Hopefully , this will help to ease some blog post publication… I am kind of happy with the look'n feel from pelican-cait , as a start. I will probably start from there , iteratively. If you have any feedback or remark, I would be glad to hear them (in the comment/disqus, by email, or else). Cheers!","tags":"general","url":"https://machines-walking-in-the-snow.com/2022/04/22/migration-finished/","loc":"https://machines-walking-in-the-snow.com/2022/04/22/migration-finished/"},{"title":"Migration to Pelican","text":"I am currently migrating all my domains to Digital Ocean. The change in DNS seems to be a little hectic (on and off constantly) for the past 12 hours. Also, I am switching to Pelican and migrating contents that I had from several places (pruning a little in the same time). Cheers!","tags":"miscellaneous","url":"https://machines-walking-in-the-snow.com/2022/04/22/migration-to-pelican/","loc":"https://machines-walking-in-the-snow.com/2022/04/22/migration-to-pelican/"},{"title":"The power of visualization","text":"I had discovered this visualization , much earlier, thanks to Nathan Yau . I found it amazing because it is so smooth, runs in my browser, and yet is so complex. It uses forecast data from NDFD , downloaded every hour, and flow lines extrapolated from wind speeds and locations. At the same time, everything is zoomable. It was probably the piece of art that convinced me I should learn javascript. Not for the science but for what it can help to produce. Today, thanks again to Nathan Yau , I discovered this . Now, I am speechless. Also, after a previous NDA work with a customer, for which I had to do real javascript work 1 , I realize that I must learn javascript… If, by any chance, you come across this, and you'd have other amazing visualization things like this (in any language), do not hesitate to share them with me! Thanks! Cheers! I need to anon this and create a showcase in the project section, by the way. ↩","tags":"science","url":"https://machines-walking-in-the-snow.com/2022/04/22/power-of-visualization/","loc":"https://machines-walking-in-the-snow.com/2022/04/22/power-of-visualization/"}]};